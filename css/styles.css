
:root {
   --color-bg: white;
   --color-blue: #0535C1;
   --font-size: 14px;
   --report-font-family: Roboto, Helvetica, Arial, sans-serif;
   --report-font-family-monospace: 'Roboto Mono', 'Menlo', 'dejavu sans mono', 'Consolas', 'Lucida Console', monospace;
}

html, body {
   padding: 0;
   margin: 0;
   width: 270px;
   background-color: var(--color-bg);
   color: #212121;
   font-family: var(--report-font-family);
   font-size: var(--font-size);
   line-height: 18px;
   user-select: none;
}

textarea {  
  font-family: var(--report-font-family);
  font-size: var(--font-size);
}

body {
   padding: 15px;
}

.container {
  display: block;
  position: relative;
  padding-left: 25px;
  margin-bottom: 8px;
  cursor: pointer;
  font-size: 14px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default checkbox */
.container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */
.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 16px;
  width: 16px;
  background-color: #fff;
  border: 1px solid #d9d9d9;
      border-radius: 2px;
}

/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark {
  border: 1px solid #2196F3;
}

.textarea:hover {
  border: 1px solid #2196F3;
}

/* When the checkbox is checked, add a blue background */
.container input:checked ~ .checkmark {
  background-color: #2196F3;
  border: 1px solid #2196F3;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;       
}

/* Show the checkmark when checked */
.container input:checked ~ .checkmark:after {
  display: block;   
}

/* Style the checkmark/indicator */
.container .checkmark:after {   
  top: 50%;
  left: 21%;
  width: 4px;
  height: 9px;
  position: absolute;
   
  border: 2px solid #fff;
  border-top: 0;
  border-left: 0;
  transform: rotate(45deg) scale(1) translate(-50%,-50%);
  opacity: 1;
  transition: all .2s cubic-bezier(.12,.4,.29,1.46) .1s;   
}

hr.divider {
  border-top: 1px solid #8c8b8b;
}

.btn {
  background-color: white;
  border: none;
  color: white;
  padding: 2px 6px;
  font-size: 16px;
  cursor: pointer;
}

.btn:focus {
  outline: none;
}

img.icon {
  width: 16px;
  height: 16px;
}

.btn-save {  
  cursor: pointer;
  border: 0;
  margin: 8px 0;
  padding: 8px;
  border-radius: 3px;
  font-size: 13px;
  color: white;
  /*color: rgba(255,255,255, 0.8);*/
  background: #333;
  position: relative;
  overflow: hidden;
  box-shadow: 0px 1px 1px rgba(0,0,0,0.3);
  background-color: #2196F3;  
}

.block {
  display: block;
}

span.btn-text {
  display: block;
  position: relative;
  z-index: 1;
}
span.btn-text::after {
  content: '';
  position: absolute;
  z-index: -1;
  top: calc(50% - 15px);
  left: calc(50% - 15px);  
  background: rgba(255,255,255, 0.7);
  width: 30px;
  height: 30px;
  border-radius: 100%;
  transform: scale(0);
}
button:focus:not(:active) span::after {
  animation: circleGrow 0.3s linear;
}
@keyframes circleGrow {
  0% {
    transform: scale(0);
    opacity: 0;
  } 
  20% {
    opacity: 1;
  }
  100% {
    transform: scale(5);
    opacity: 0;
  }
}
